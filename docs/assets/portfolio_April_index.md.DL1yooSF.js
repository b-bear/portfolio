import{_ as a,a as o,b as r,c as i,d as t}from"./chunks/april_facecontrols.BdTVPKUx.js";import{_ as s,a as l,o as n,U as p}from"./chunks/framework.BS4h1hlk.js";const v=JSON.parse(`{"title":"April","description":"","frontmatter":{"title":"April","meta":[{"name":"description","content":"April, a 3D 'Generic' mobile-game character"},{"name":"keywords","content":"April, 3D, Characters"}],"thumb":"/img/april-featured.png","hidden":false,"featured":false},"headers":[],"relativePath":"portfolio/April/index.md","filePath":"portfolio/April/index.md","lastUpdated":1730647427000}`),d={name:"portfolio/April/index.md"};function c(m,e,f,h,_,g){return n(),l("div",null,e[0]||(e[0]=[p('<h1 id="april" tabindex="-1">April <a class="header-anchor" href="#april" aria-label="Permalink to &quot;April&quot;">​</a></h1><h3 id="software-blender-photoshop" tabindex="-1">Software: Blender &amp; Photoshop <a class="header-anchor" href="#software-blender-photoshop" aria-label="Permalink to &quot;Software: Blender &amp; Photoshop&quot;">​</a></h3><p>A 3D character I made for mobile games in testing, with advanced rigging controls for animation, including foot-roll controls, FK/ IK switches, and blend-shape controls for facial expressions.</p><img loading="lazy" src="'+a+'"><div class="flex"><video loading="lazy" controls style="padding:5px;"><source src="'+o+'" type="video/mp4"></video><img width="100" class="flex-1 pr-3" loading="lazy" src="'+r+'"></div> FK/IK switches &amp; a foot-roll &amp; heel-toe pivot for easier animation <div class="flex"><video loading="lazy" controls style="padding:5px;"><source src="'+i+'" type="video/mp4"></video><img class="flex-1 pr-3" loading="lazy" src="'+t+'"></div> Controls for facial expression blendshapes ',8)]))}const A=s(d,[["render",c]]);export{v as __pageData,A as default};
