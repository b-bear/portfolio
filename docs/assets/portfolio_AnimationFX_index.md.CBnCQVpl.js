import{_ as a,a as t,b as i}from"./chunks/disintigrate.BIwr5Y3P.js";import{_ as o}from"./chunks/DEER.BUn6HE6V.js";import{_ as r,a as s,o as n,U as l}from"./chunks/framework.BS4h1hlk.js";const d="/assets/showreel.mp4",h="/assets/lightning01.gif",c="/assets/lightning02.gif",m="/assets/lightning03.gif",p="/assets/Lightning-Shader.png",f="/assets/01_birb.gif",k=JSON.parse('{"title":"Animation & FX","description":"","frontmatter":{"title":"Animation & FX","meta":[{"name":"Animation & FX by Rebecca Deakin","content":null}],"thumb":"/img/Holocards.gif","hidden":false,"featured":false},"headers":[],"relativePath":"portfolio/AnimationFX/index.md","filePath":"portfolio/AnimationFX/index.md","lastUpdated":1752421119000}'),g={name:"portfolio/AnimationFX/index.md"};function _(u,e,b,x,S,y){return n(),s("div",null,e[0]||(e[0]=[l('<h1 id="showreel" tabindex="-1">Showreel <a class="header-anchor" href="#showreel" aria-label="Permalink to &quot;Showreel&quot;">​</a></h1><video loading="lazy" controls style="padding:5px;"><source src="'+d+'" type="video/mp4"></video><h1 id="shaders" tabindex="-1">Shaders <a class="header-anchor" href="#shaders" aria-label="Permalink to &quot;Shaders&quot;">​</a></h1><h3 id="software-unity-shadergraph" tabindex="-1">Software: Unity Shadergraph <a class="header-anchor" href="#software-unity-shadergraph" aria-label="Permalink to &quot;Software: Unity Shadergraph&quot;">​</a></h3><h3 id="lightning-shader-effect" tabindex="-1">Lightning Shader Effect <a class="header-anchor" href="#lightning-shader-effect" aria-label="Permalink to &quot;Lightning Shader Effect&quot;">​</a></h3><img loading="lazy" width="600" src="'+h+'"><div class="flex"><img width="100" height="100" class="flex-1 pr-3" loading="lazy" src="'+c+'"><img width="100" height="100" class="flex-1 pr-3" loading="lazy" src="'+m+'"></div><img loading="lazy" src="'+p+'"><p>This shader to be applied to the <strong>Line-Renderer Component</strong> in Unity, to create a lightning effect between elements on a game-board. Exposed properties made the effect easy to tweak for other artists</p><h3 id="vfx-for-solitaire-quest" tabindex="-1">VFX for Solitaire Quest <a class="header-anchor" href="#vfx-for-solitaire-quest" aria-label="Permalink to &quot;VFX for Solitaire Quest&quot;">​</a></h3><video loading="lazy" controls style="padding:5px;"><source src="'+a+'" type="video/mp4"></video><img loading="lazy" src="'+t+'"><img loading="lazy" width="200" src="'+i+'"><p>Shaders &amp; VFX for <a href="./../SolitaireQuest/index.html">Solitaire Quest</a></p><hr><h1 id="colorville" tabindex="-1">Colorville <a class="header-anchor" href="#colorville" aria-label="Permalink to &quot;Colorville&quot;">​</a></h1><h3 id="software-spine" tabindex="-1">Software: Spine <a class="header-anchor" href="#software-spine" aria-label="Permalink to &quot;Software: Spine&quot;">​</a></h3><video loading="lazy" controls style="padding:5px;"><source src="'+o+'" type="video/mp4"></video><hr><h1 id="other-animation" tabindex="-1">Other Animation <a class="header-anchor" href="#other-animation" aria-label="Permalink to &quot;Other Animation&quot;">​</a></h1><img loading="lazy" src="'+f+'">',21)]))}const P=r(g,[["render",_]]);export{k as __pageData,P as default};
